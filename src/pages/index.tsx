import React, { useEffect } from "react";
import { useRef, useState } from "react";

import Head from "next/head";
import {
  AboutMe,
  Skills,
  Repositories,
  Welcome,
  ContactMe,
  Setting,
} from "@/components/export";
import Image from "next/image";
import { LanguageContext } from "@/utils/Contexct";
// Import Swiper React components
import { Swiper, SwiperRef, SwiperSlide } from "swiper/react";
// Import Swiper styles
import "swiper/css";
import "swiper/css/effect-coverflow";
import "swiper/css/pagination";
import "swiper/css/navigation";

// import required modules
import { Pagination, Navigation, EffectCreative, Mousewheel } from "swiper";

interface UserContextValue {
  language: string;
  setLanguage: (language: string) => void;
}

interface IPage {
  activeIndex?: number;
}

export default function Home(): JSX.Element {
  const [page, setPage] = useState<IPage>({ activeIndex: 0 });
  const [language, setLanguage] = useState<string>("pt");
  const swiperRef = useRef<SwiperRef>(null);
  const aboutMeRef = useRef<any>(null);
  const welcomeRef = useRef<any>(null);
  const skillsRef = useRef<any>(null);
  const repositoriesRef = useRef<any>(null);
  const classDefault =
    "relative !flex flex-col items-center text-white spacing_content bg-tranparent";

  useEffect(() => {
    if (welcomeRef && page?.activeIndex === 0) {
      welcomeRef?.current?.handleAnimation();
    } else if (aboutMeRef && page?.activeIndex === 1) {
      aboutMeRef?.current?.handleAnimation();
    } else if (skillsRef && page?.activeIndex === 2) {
      skillsRef?.current?.handleAnimation();
    } else if (repositoriesRef && page?.activeIndex === 3) {
      repositoriesRef?.current?.handleAnimation();
    }
  }, [page]);

  return (
    <>
      <Head>
        <title>Portfólio de Flávio Leonardo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <LanguageContext.Provider value={{ language, setLanguage }}>
        <Swiper
          effect={"creative"}
          direction={"vertical"}
          // navigation={true}
          slidesPerView={1}
          spaceBetween={30}
          mousewheel={true}
          speed={1000}
          pagination={{
            clickable: true,
          }}
          creativeEffect={{
            prev: {
              translate: [0, "-100%", 0],
            },
            next: {
              translate: [0, "-100%", 0],
            },
          }}
          modules={[EffectCreative, Mousewheel, Pagination, Navigation]}
          className="bg-animation h-full "
          ref={swiperRef}
          onSlideNextTransitionStart={(e) => {
            setPage({
              activeIndex: e?.activeIndex,
            });
          }}
          onSlidePrevTransitionStart={(e) => {
            setPage({
              activeIndex: e?.activeIndex,
            });
          }}
          // onActiveIndexChange={(e) => {
          //   setPage({
          //     activeIndex: e?.activeIndex,
          //     previousIndex: e.previousIndex,
          //   });
          // }}
        >
          <SwiperSlide className={`${classDefault} welcome !justify-start`}>
            <Welcome ref={welcomeRef} />
          </SwiperSlide>

          <SwiperSlide className={`${classDefault} aboutMe`}>
            <AboutMe ref={aboutMeRef} />
          </SwiperSlide>

          <SwiperSlide className={`${classDefault} skills`}>
            <Skills ref={skillsRef} />
          </SwiperSlide>

          <SwiperSlide className={`${classDefault} repositories`}>
            <Repositories ref={repositoriesRef} />
          </SwiperSlide>

          <ContactMe />

          <Setting />
        </Swiper>
      </LanguageContext.Provider>
    </>
  );
}
